import React, { useState } from "react";

import {
  Divider,
  Flex,
  FlexItem,
  PageSection,
  PageSectionVariants,
  Tab,
  Tabs,
  TabTitleText,
  Text,
  TextContent,
} from "@patternfly/react-core";

import { PathParam, useRouteParams } from "@app/Routes";
import { LoadingWrapper } from "@app/components/LoadingWrapper";
import { SeverityShieldAndText } from "@app/components/SeverityShieldAndText";
import { useFetchVulnerabilityById } from "@app/queries/vulnerabilities";

import { AdvisoriesByVulnerability } from "./advisories-by-vulnerability";
import { Overview } from "./overview";
import { SbomsByVulnerability } from "./sboms-by-vulnerability";

export const CveDetails: React.FC = () => {
  const vulnerabilityId = useRouteParams(PathParam.VULNERABILITY_ID);
  const [activeTabKey, setActiveTabKey] = useState<string | number>(0);

  const { vulnerability, isFetching, fetchError } =
    useFetchVulnerabilityById(vulnerabilityId);

  const handleTabClick = (
    event: React.MouseEvent<any> | React.KeyboardEvent | MouseEvent,
    tabIndex: string | number
  ) => {
    setActiveTabKey(tabIndex);
  };

  return (
    <>
      <PageSection variant={PageSectionVariants.light}>
        <Flex>
          <FlexItem>
            <TextContent>
              <Text component="h1">{vulnerability?.identifier ?? ""} </Text>
            </TextContent>
          </FlexItem>
          <FlexItem>
            {vulnerability?.average_severity ? (
              <SeverityShieldAndText value={vulnerability.average_severity} />
            ) : (
              <></>
            )}
          </FlexItem>
        </Flex>
        <div className="pf-v5-u-m-md">
          <LoadingWrapper isFetching={isFetching} fetchError={fetchError}>
            {vulnerability && <Overview vulnerability={vulnerability} />}
          </LoadingWrapper>
        </div>
      </PageSection>
      <Divider component="div" />
      <PageSection padding={{ default: "padding" }}>
        <Tabs
          activeKey={activeTabKey}
          aria-label="CVE detail tabs"
          onSelect={handleTabClick}
          role="region"
          isBox={true}
        >
          <Tab
            eventKey={0}
            title={<TabTitleText>Related SBOMs</TabTitleText>}
            aria-label="Related SBOMs for this CVE"
          >
            <LoadingWrapper isFetching={isFetching} fetchError={fetchError}>
              {vulnerability && (
                <SbomsByVulnerability advisories={vulnerability.advisories} />
              )}
            </LoadingWrapper>
          </Tab>
          <Tab
            eventKey={1}
            title={<TabTitleText>Related Advisories</TabTitleText>}
            aria-label="Advisories that explain the current Vulnerability"
          >
            <LoadingWrapper isFetching={isFetching} fetchError={fetchError}>
              {vulnerability && (
                <AdvisoriesByVulnerability
                  advisories={vulnerability.advisories}
                />
              )}
            </LoadingWrapper>
          </Tab>
        </Tabs>
      </PageSection>
    </>
  );
};
