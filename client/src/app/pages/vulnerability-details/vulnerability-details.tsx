import React, { useState } from "react";

import {
  Divider,
  PageSection,
  PageSectionVariants,
  Popover,
  Tab,
  TabAction,
  Tabs,
  TabTitleText,
  Text,
  TextContent,
} from "@patternfly/react-core";
import HelpIcon from "@patternfly/react-icons/dist/esm/icons/help-icon";

import { PathParam, useRouteParams } from "@app/Routes";
import { LoadingWrapper } from "@app/components/LoadingWrapper";
import { SeverityShieldAndText } from "@app/components/SeverityShieldAndText";
import { useFetchVulnerabilityById } from "@app/queries/vulnerabilities";

import { AdvisoriesByVulnerability } from "./advisories-by-vulnerability";
import { Overview } from "./overview";
import { PackagesByVulnerability } from "./packages-by-vulnerability";
import { SbomsByVulnerability } from "./sboms-by-vulnerability";

export const CveDetails: React.FC = () => {
  const vulnerabilityId = useRouteParams(PathParam.VULNERABILITY_ID);
  const [activeTabKey, setActiveTabKey] = useState<string | number>(0);

  const { vulnerability, isFetching, fetchError } =
    useFetchVulnerabilityById(vulnerabilityId);

  const handleTabClick = (
    event: React.MouseEvent<any> | React.KeyboardEvent | MouseEvent,
    tabIndex: string | number
  ) => {
    setActiveTabKey(tabIndex);
  };

  return (
    <>
      <PageSection variant={PageSectionVariants.light}>
        <TextContent>
          <Text component="h1">
            {vulnerability?.identifier ?? ""}
            {vulnerability?.average_severity ? (
              <SeverityShieldAndText value={vulnerability.average_severity} />
            ) : (
              <></>
            )}
          </Text>
        </TextContent>
        <div className="pf-v5-u-m-md">
          <LoadingWrapper isFetching={isFetching} fetchError={fetchError}>
            {vulnerability && <Overview vulnerability={vulnerability} />}
          </LoadingWrapper>
        </div>
      </PageSection>
      <Divider component="div" />
      <PageSection padding={{ default: "padding" }}>
        <Tabs
          activeKey={activeTabKey}
          aria-label="CVE detail tabs"
          onSelect={handleTabClick}
          role="region"
        >
          <Tab
            eventKey={0}
            title={<TabTitleText>SBOMs</TabTitleText>}
            aria-label="Related SBOMs for this CVE"
            actions={
              <>
                <Popover
                  bodyContent={
                    <div>
                      SBOMs that are <strong>mentioned</strong> in the current
                      Vulnerability.
                    </div>
                  }
                  position="top"
                >
                  <TabAction>
                    <HelpIcon />
                  </TabAction>
                </Popover>
              </>
            }
          >
            <div className="pf-v5-u-m-md">
              <LoadingWrapper isFetching={isFetching} fetchError={fetchError}>
                {vulnerability && (
                  <SbomsByVulnerability advisories={vulnerability.advisories} />
                )}
              </LoadingWrapper>
            </div>
          </Tab>
          <Tab
            eventKey={1}
            title={<TabTitleText>Advisories</TabTitleText>}
            aria-label="Advisories that explain the current Vulnerability"
            actions={
              <>
                <Popover
                  bodyContent={
                    <div>Advisories that explain the current Vulnerability</div>
                  }
                  position="top"
                >
                  <TabAction>
                    <HelpIcon />
                  </TabAction>
                </Popover>
              </>
            }
          >
            <div className="pf-v5-u-m-md">
              <LoadingWrapper isFetching={isFetching} fetchError={fetchError}>
                {vulnerability && (
                  <AdvisoriesByVulnerability
                    advisories={vulnerability.advisories}
                  />
                )}
              </LoadingWrapper>
            </div>
          </Tab>
          <Tab
            eventKey={2}
            title={<TabTitleText>Packages</TabTitleText>}
            actions={
              <>
                <Popover
                  bodyContent={
                    <div>
                      Packages that are <strong>mentioned</strong> in the
                      current Vulnerability.
                    </div>
                  }
                  position="top"
                >
                  <TabAction>
                    <HelpIcon />
                  </TabAction>
                </Popover>
              </>
            }
          >
            <div className="pf-v5-u-m-md">
              <LoadingWrapper isFetching={isFetching} fetchError={fetchError}>
                {vulnerability && (
                  <PackagesByVulnerability
                    advisories={vulnerability.advisories}
                  />
                )}
              </LoadingWrapper>
            </div>
          </Tab>
        </Tabs>
      </PageSection>
    </>
  );
};
